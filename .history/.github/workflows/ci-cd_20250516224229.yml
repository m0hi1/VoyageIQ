name: VoyageIQ CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    env:
      NODE_ENV: test
      MONGO_URL: mongodb://localhost:27017/voyagiq-test
      JWT_SECRET: ${{ secrets.JWT_SECRET || 'test-secret-key' }}
      
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
          
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'
        
    - name: Install backend dependencies
      run: cd backend && npm ci
      
    - name: Run backend tests
      run: cd backend && npm test
      
    - name: Run linting
      run: cd backend && npm run lint
      
  test-frontend:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
        
    - name: Install frontend dependencies
      run: cd frontend && npm ci
      
    - name: Run frontend tests
      run: cd frontend && npm test
      
    - name: Build frontend
      run: cd frontend && npm run build
  
  deploy-dev:
    needs: [test-backend, test-frontend]
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Dev Environment
      # Add your deployment steps here for development environment
      run: echo "Deploying to development environment"
  
  deploy-prod:
    needs: [test-backend, test-frontend]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Production
      # Add your production deployment steps here
      run: echo "Deploying to production environment"
      
    - name: Deploy Backend to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_BACKEND }}
        working-directory: ./backend
        
    - name: Deploy Frontend to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_FRONTEND }}
        working-directory: ./frontend
